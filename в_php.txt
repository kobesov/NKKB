1. Простейшая арифметика
1.1. Даны два числа 5 и 7. Найти их сумму и произведение.
1.2. Даны два числа 4 и 6. Найдите сумму их квадратов.
1.3. Даны три числа 3, 5, 8. Найдите их среднее арифметическое.
1.4. Даны три числа x = 2,y = 6 и z = 9. Найдите (x+1)4?2(z?2x^2+y^2) 1. <?php
1.5. Даны три ненулевых числа $a = 4, $b = 8, $c = 3. Найдите всевозможные результаты деления суммы двух из них на оставшееся третье число.
1.6. Дано трехзначное числа. Найдите сумму его цифр.

2. Условный оператор
2.1. Дано число 15. Если оно больше 10, то увеличьте его на 100, иначе уменьшите
на 30.
2.2. Дано натуральное число 8. Если оно четное, то уменьшите его в 2 раза, иначе увеличьте в 3 раза.
2.3. Дано число. Если оно не меньше 50, то выведите квадрат этого числа, если же это число больше 10 и меньше 30, то выведите ноль, в остальных случаях выведите слово "Ошибка"
2.4. Дано два числа $a = 15, $b = 4. Вывести наибольшее из них.
2.5. Дано два числа $a = 19, $b = 143. Вывести 'Да', если они отличаются на 100, иначе вывести 'Нет'
2.6. Дано два натуральных числа. Вывести 'Да', если они отличаются не более чем на 20, иначе вывести 'Нет'.
2.7. В данном трехзначном числе переставьте цифры так, чтобы новое число оказалось наибольшим из возможных.
2.8. Пользователь вводит номер дня недели. Вывести название дня недели.
2.9. Пользователь вводит свой возраст. Если он больше 80 лет, то вывести 'Здравствуйте, уважаемый', иначе 'Успехов!'.

3. Массивы
3.1. Дан массив с элементами 'Привет, ', 'мир' и '!'. Необходимо вывести на экран фразу 'Привет, мир!'.
3.2. Решим немного другую задачу: дан массив с элементами 'Привет, ', 'мир' и '!'. Необходимо записать в переменную $text фразу 'Привет, мир!', а затем вывести на экран содержимое этой переменной.s23
3.3. Дан массив ['Привет, ', 'мир', '!']. Необходимо записать в первый элемент (то есть элемент с номером ноль) этого массива слово 'Пока, ' (то есть вместо слова 'Привет, ' будет 'Пока, ' ).
3.4. Дан массив вида [1, '', 2, '', '', 3] – то есть в нем есть пустые строки. Удалите все такие элементы из этого массива.
3.5. Создайте массив заработных плат $arr. Выведите на экран зарплату Коли. Решение: чтобы вывести зарплату Коли следует вывести значение элемента массива с ключом 'Коля' . $arr = ['Коля'=>'1000$', 'Вася'=>'500$', 'Петя'=>'200$'];

3.6. Создайте массив $arr с элементами 1, 2, 3, 4, 5 двумя различными способами. Первый способ создать массив – объявить его через []:
<?php
$arr = [1, 2, 3, 4, 5];
?>
Второй способ создания массива – это поступить таким образом:
$arr[] = 1;
$arr[] = 2;
$arr[] = 3;
$arr[] = 4;
$arr[] = 5;
?>
3.7. Создайте массив $arr. a =>1, b=>2, c=>3. Выведите на экран элемент с ключом 'b' .
3.8. Создайте массив $arr. Найдите сумму элементов этого массива. $arr = ['a' => 1, 'b' => 2, 'c' => 3]
3.9. Создайте ассоциативный массив дней недели. Ключами в нем должны служить
номера дней от начала недели (понедельник – должен иметь ключ 1, вторник – 2 и т.д.). Выведите на экран текущий день недели.( например сегодня – четверг)
3.10. Пусть теперь номер дня недели хранится в переменной $day, например там лежит число 3. Выведите день недели, соответствующий значению переменной $day.

4. Многомерные массивы
4.1. Дан многомерный массив
$arr = [
'sp'=>['azul', 'rojo', 'verde'],
'en'=>['blue', 'red', 'green'],
];
Выведите с его помощью слово 'azul'
<?php
$arr = [
'sp'=>['azul', 'rojo', 'verde'], 4. 'en'=>['blue', 'red', 'green'], 5. ];
//так как массив многомерный
//(в нашем случае двухмерный),
//то придется написать несколько
//квадратных скобок подряд
var_dump($arr['sp']);
echo $arr['sp'][0]; //выведет 'azul'
echo $arr['sp'][1]; //выведет 'rojo'
echo $arr['en'][1]; //выведет 'red'
?>
4.2. Создайте массив $arr=['a', 'b', 'c']. Выведите значение массива на экран с помощью функции var_dump(). С помощью массива $arr из предыдущего номера выведите на экран содержимое первого, второго и третьего элементов.
4.3. Создайте массив $arr с элементами 2, 8, 5, 3. Умножьте первый элемент
массива на второй, а третий элемент на четвертый. Результаты сложите, присвойте переменной $a. Выведите на экран значение этой переменной.
4.4. Заполните массив $arr числами от 1 до 5. Не объявляйте массив, а просто заполните его присваиванием $arr[] = новое значение.
4.5. Создайте многомерный массив $arr.
$arr = [
'cms'=>['joomla', 'wordpress', 'drupal'],
'colors'=>['blue'=>'голубой', 'red'=>'красный', 'green'=>'зеленый']
]
С его помощью выведите на экран слова 'joomla', 'drupal', 'verde', 'rojo’.
4.6. Создайте двухмерный массив. Первые два ключа – это 'ru' и 'en' . Пусть первый ключ содержит элемент, являющийся массивом названий дней недели по-русски, а второй – по-английски. Выведите с помощью этого массива понедельник по-русски и среду по английски (пусть понедельник – это первый день).
<?php
$arr = [['en'=>[1=>'mn', 'ts', 'wd', 'th', 'fr', 'st', 'sn']];
?>
4.7. Пусть теперь в переменной $lang хранится язык (она принимает одно из
значений или 'ru', или 'en' – либо то, либо то), а в переменной $day – номер дня.
Выведите словом день недели, соответствующий переменным $lang и $day. То есть: если, к примеру, $lang = 'ru' и $day = 3 – то выведем 'среда'.

7. Строки в PHP
Для решения задач данного блока вам понадобятся следующие функции: strtolower, strtoupper, ucfirst,lcfirst, ucwords.
7.1. Дана строка 'php' . Сделайте из нее строку 'PHP'
7.2. Дана строка 'PHP' . Сделайте из нее строку 'php'
7.3. Дана строка 'london' . Сделайте из нее строку 'London'
7.4. Дана строка 'London' . Сделайте из нее строку 'london'
7.5. Дана строка 'london is the capital of great britain'. Сделайте из нее строку 'London Is The Capital Of Great Britain' .
7.6. Дана строка 'LONDON' . Сделайте из нее строку 'London'
Работа с strlen
7.7. Дана строка 'html css php' . Найдите количество символов в этой строке.
7.8. Дана переменная $password, в которой хранится пароль пользователя. Если количество символов пароля больше 5-ти и меньше 10-ти, то выведите пользователю сообщение о том, что пароль подходит, иначе сообщение о том, что нужно придумать другой пароль.
Работа с substr
7.9. Дана строка 'html css php' . Вырежьте из нее и выведите на экран слово 'html', слово 'css' и слово 'php'.
7.10. Дана строка. Вырежите и выведите на экран последние 3 символа этой строки.
7.11. Дана строка. Проверьте, что она начинается на 'http://' . Если это так, выведите 'да', если не так – 'нет'.
7.12. Дана строка. Проверьте, что она начинается на 'http://' или на 'https://' . Если это так, выведите 'да', если не так – 'нет'.
7.13. Дана строка. Проверьте, что она заканчивается на '.png' . Если это так, выведите 'да', если не так – 'нет'.
7.14. Дана строка. Проверьте, что она заканчивается на '.png' или на '.jpg' . Если это так, выведите 'да', если не так – 'нет'.
7.15. Дана строка. Если в этой строке более 5-ти символов – вырежите из нее первые 5 символов, добавьте троеточие в конец и выведите на экран. Если же в этой строке 5 и менее символов – просто выведите эту строку на экран.
Работа с str_replace
7.16. Дана строка '31.12.2013' . Замените все точки на дефисы.
7.17. Дана строка $str. Замените в ней все буквы 'a' на цифру 1, буквы 'b' – на 2, а буквы 'c' – на 3.
7.18. Дана строка с буквами и цифрами, например, ' 1a2b3c4b5d6e7f8g9h0'. Удалите из нее все цифры. То есть в нашем случае должна получится строка ' abcbdefgh'.
Работа с strtr
7.19. Дана строка $str. Замените в ней все буквы 'a' на цифру 1, буквы 'b' – на 2, а буквы 'c' – на 3. Решите задачу двумя способами работы с функцией strtr (массив замен и две строки замен).
7.20. Работа с substr_replace
7.21. Дана строка $str. Вырежите из нее подстроку с 3-го символа (отсчет с нуля), 5 штук и вместо нее вставьте '!!!'.
Работа с strpos, strrpos
7.22. Дана строка 'abc abc abc'. Определите позицию первой буквы 'b'.
7.23. Дана строка 'abc abc abc'. Определите позицию последней буквы 'b'.
7.24. Дана строка 'abc abc abc'. Определите позицию первой найденной буквы 'b', если начать поиск не с начала строки, а с позиции 3.
7.25. Дана строка 'aa aa aa aa'. Определите позицию второго пробела. Проверьте, что в строке есть две точки подряд. Если это так – выведите 'есть', если не так – 'нет'.

7.26. Проверьте, что строка начинается на 'http://' . Если это так – выведите 'да', если не так – 'нет'
Работа с explode, implode
7.27. Дана строка 'html css php' . С помощью функции explode запишите каждое слово этой строки в отдельный элемент массива
7.28. Дан массив с элементами 'html', 'css', 'php' . С помощью функции implode создайте строку из этих элементов, разделенных запятыми
7.29. В переменной $date лежит дата в формате '2016-12-31' . Преобразуйте эту дату в формат '31.12.2016'
Работа с str_split
7.30. Дана строка '1234567890' . Разбейте ее на массив с элементами '12', '34', '56', '78', '90'
7.31. Дана строка '1234567890' . Разбейте ее на массив с элементами '1', '2', '3', '4', '5', '6', '7', '8', '9', '0'
7.32. Дана строка '1234567890' . Сделайте из нее строку '12-34-56-78-90' не используя цикл
Работа с trim, ltrim, rtrim
7.33. Дана строка. Очистите ее от концевых пробелов.
7.34. Дана строка '/php/' . Сделайте из нее строку 'php' , удалив концевые слеши.
7.35. Дана строка 'слова слова слова.' . В конце этой строки может быть точка, а может и не быть. Сделайте так, чтобы в конце этой строки гарантировано стояла точка. То есть: если этой точки нет – ее надо добавить, а если есть – ничего не делать. Задачу решите через rtrim без if.
Работа с strrev
7.36. Дана строка '12345' . Сделайте из нее строку '54321' 
7.37. Проверьте, является ли слово палиндромом (одинаково читается во всех направлениях, примеры таких слов: madam, otto, kayak, nun, level).
Работа с str_shuffle
7.38. Дана строка. Перемешайте символы этой строки в случайном порядке
7.39. Создайте строку из 6-ти случайных маленьких латинских букв так, чтобы буквы не повторялись. Нужно сделать так, чтобы в нашей строке могла быть любая латинская буква, а не ограниченный набор.
Работа с str_repeat
7.40. Нарисуйте пирамиду, как показано на рисунке, только у вашей пирамиды должно быть 9 рядов, а не 5. Решите задачу с помощью одного цикла и функции str_repeat.
x
xx
xxx
xxxx
xxxxx
7.41. Нарисуйте пирамиду, как показано на рисунке. Решите задачу с помощью одного цикла и функции str_repeat.
22
333
4444
55555
666666
7777777
88888888
999999999
7.42. Работа с strip_tags и htmlspecialchars
7.43. Дана строка 'html, <b>php</b>, js' . Удалите теги из этой строки.
7.44. Дана строка $str. Удалите все теги из этой строки, кроме тегов <b> и <i>.
7.45. Дана строка 'html, <b>php</b>, js' . Выведите ее на экран 'как есть' : то есть браузер не должен преобразовать <b> в жирный.
Работа с strstr
7.46. Дана строка 'ab–cd–ef' . С помощью функции strstr выведите на экран строку '–cd–ef' .

8. Применение строк в PHP
8.1. Пользователь вводит названия городов через пробел. Переставьте названия так, чтобы названия были упорядочены по алфавиту.
8.2. Преобразуйте строку 'var_test_text' в 'varTestText' . Скрипт, конечно же, должен работать с любыми аналогичными строками
8.3. Дана строка следующего вида: 5 цифр, затем пробел, затем еще 5 цифр. Например, дана такая строка '12345 67890' . Сделайте из нее строку '54321 09876'
8.4. Дан массив с числами. Выведите на экран все числа, в которых есть цифра 3
8.5. Дан массив с числами. Посчитайте суммарное количество цифр 3 в этих числах
8.6. Дана строка с цифрами, например: '12345678'. Просуммируйте числа этой строки вот таким образом: 12+34+56+78. Строка, конечно же, может быть произвольной (но только с цифрами внутри)
8.7. Дана строка вида /aaa/222/we33/qqq/. Сделайте функцию, которая заменит энный блок в такой строке на заданный текст. Пример: funct('/aaa/222/we33/qqq/', 2, '!') выдаст '/aaa/222/!/qqq/ – заменили второй блок (нумерация с нуля).